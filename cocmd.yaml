name: cocmd
automations:
  - name: contrib-onboarding
    content:
      description: "onboarding for project https://github.com/JKHeadley/appy"
      env: osx
      steps:
        - title: install git
          runner: cocmd
          content: git.setup
        - title: install rust
          runner: cocmd
          content: rust.setup
        - title: git clones
          runner: shell
          content: |
            mkdir -p cocmd-project
            cd cocmd-project
            for name in homebrew-tap cocmd website hub example-repo-template; do
              repo="git@github.com:cocmd/$name.git"
              echo "cloning $name"
              if [ -d ./$name ]; then
                echo "$name project already exists"
              else
                echo "$repo doesn't exist"
                git clone $repo
              fi
            done

        - title: add git hooks
          runner: shell
          content: |
            cd cocmd-project/cocmd
            touch .git/hooks/pre-push
            chmod +x .git/hooks/pre-push
            # add multiline  text to the pre-push
            cat << 'EOF' > .git/hooks/pre-push
            #!/bin/bash

            # Run cargo clippy, cargo fix, and cargo fmt
            cargo clippy --fix && \
              cargo clippy && \
              cargo fix --allow-dirty && \ 
              cargo fmt --all 

            # Check if there are any changes
            if git diff --quiet; then
                echo "No code changes detected."
            else
                # Automatically commit and push the changes
                git add .
                git commit -m "Auto-fix with cargo clippy and cargo fmt"
            fi
            EOF

            echo "pre-push hook added"
            cat .git/hooks/pre-push

        - title: run website
          runner: shell
          content: |
            cd cocmd-project/website
            yarn install
            
            echo "website ready to run - yarn start"
        - title: add 
          runner: shell
          content: |
            cd cocmd-project/website
            
        - title: build cli
          runner: shell
          content: |
            cd cocmd-project/cocmd
            cargo build
            cargo test
            cargo run -- --version

        - title: open IDEs
          runner: shell
          approval_message: To open the code with VSCode?
          content: |
            cocmd --no-verbose run vscode.setup
            code cocmd-project
            
            
